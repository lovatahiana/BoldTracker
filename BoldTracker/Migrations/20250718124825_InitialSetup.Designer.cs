// <auto-generated />
using System;
using BoldTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoldTracker.Migrations
{
    [DbContext(typeof(BoldTrackerContext))]
    [Migration("20250718124825_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoldTracker.Models.Label", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabelId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LabelId");

                    b.HasIndex("UserId");

                    b.ToTable("Labels");

                    b.HasData(
                        new
                        {
                            LabelId = 1,
                            Name = "School",
                            UserId = 1
                        },
                        new
                        {
                            LabelId = 2,
                            Name = "Personal",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BoldTracker.Models.TodoTask", b =>
                {
                    b.Property<int>("TodoTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TodoTaskId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HumorText")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsProcrastinated")
                        .HasColumnType("bit");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TodoTaskId");

                    b.HasIndex("LabelId");

                    b.HasIndex("UserId");

                    b.ToTable("TodoTasks");

                    b.HasData(
                        new
                        {
                            TodoTaskId = 1,
                            Description = "Page 42 to 45, calculus",
                            DueDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsProcrastinated = false,
                            LabelId = 1,
                            Priority = 2,
                            Status = 0,
                            Title = "Finish math homework",
                            UserId = 1
                        },
                        new
                        {
                            TodoTaskId = 2,
                            Description = "Eggs, milk, bread",
                            DueDate = new DateTime(2025, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HumorText = "Procrastinated again 😅",
                            IsProcrastinated = true,
                            LabelId = 2,
                            Priority = 1,
                            Status = 2,
                            Title = "Buy groceries",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BoldTracker.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@example.com",
                            PasswordHash = "hashed123",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BoldTracker.Models.Label", b =>
                {
                    b.HasOne("BoldTracker.Models.User", "User")
                        .WithMany("Labels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoldTracker.Models.TodoTask", b =>
                {
                    b.HasOne("BoldTracker.Models.Label", "Label")
                        .WithMany("TodoTasks")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("BoldTracker.Models.User", "User")
                        .WithMany("TodoTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Label");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoldTracker.Models.Label", b =>
                {
                    b.Navigation("TodoTasks");
                });

            modelBuilder.Entity("BoldTracker.Models.User", b =>
                {
                    b.Navigation("Labels");

                    b.Navigation("TodoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
